# 中序遍历二叉树，取出节点和值
# 对值排序，再赋给节点
class Solution:
    def recoverTree(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        if not root: return
        nodes, vals = [], []
        # 中序遍历
        def inOrder(root):
            if root.left: inOrder(root.left)
            # 取出节点和值
            nodes.append(root)
            vals.append(root.val)
            if root.right: inOrder(root.right)
            return
        inOrder(root)
        # 排序值
        vals.sort()
        # 将值赋给节点
        i = 0
        for node in nodes:
            node.val = vals[i]
            i += 1
        return
# 时间复杂度O(n)
# 空间复杂度O(n)
