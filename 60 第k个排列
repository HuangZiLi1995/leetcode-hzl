# 递归函数
# 可选数字从大到小排序
# 每次选择一个数字
# 剩下数字有(len(n)-1)!个排列
# 计算k中可进行多少次(len(n)-1)!个排列，即可过滤多少前面的数
# 即选择下一个数即可
class Solution:
    def getPermutation(self, n: int, k: int) -> str:
        nums = [i for i in range(1,n+1)]
        # 递归函数
        def getNextNum(nums, k, record=''):
            # 如果只剩下一个数，则直接填入
            if len(nums) == 1:
                return record+str(nums[0])
            # 计算选择一个数后剩下数字可进行的排列
            count = 1
            for i in range(1, len(nums)):
                count *= i
            # 计算这是第几个排列
            index = (k-1) // count
            return getNextNum(nums[:index]+nums[index+1:], k-index*count, record+str(nums[index]))
        return getNextNum(nums, k)
# 时间复杂度O(n)
# 空间复杂度O(1)
