# 三路快排，三指针
# [l,r]内为1，区间为0.右边为2
# i遍历nums
# 如果nums[i]==0,则与nums[l]交换
# 如果nums[i]==1,则前进一位
# 如果nums[i]==2,则与nums[r]交换
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        l, r, i = 0, len(nums)-1, 0
        while i <= r:
            if nums[i] == 0:
                nums[i], nums[l] = nums[l], nums[i]
                i += 1
                l += 1
            elif nums[i] == 1:
                i += 1
            else:
                nums[i], nums[r] = nums[r], nums[i]
                r -= 1
        return
# 时间复杂度O(n)
# 空间复杂度O(1)
