### 解题思路
动态规划
dp[i][j]记录s[j]与t[i]的匹配结果
s[j]最后一个字符不匹配时，dp[i][j]=dp[i][j-1]
若匹配时则还需加上dp[i--1][j-1]

时间复杂度O(n*m)
空间复杂度O(n*m)

### 代码
```python3
class Solution:
    def numDistinct(self, s: str, t: str) -> int:
        s, t = ' '+s, ' '+t
        dp = [[0]*len(s) for _ in range(len(t))]
        dp[0] = [1] * len(s)
        for i in range(1,len(t)):
            for j in range(1,len(s)):
                dp[i][j] = dp[i][j-1]
                if s[j] == t[i]:
                    dp[i][j] += dp[i-1][j-1]
        return dp[-1][-1]
```
