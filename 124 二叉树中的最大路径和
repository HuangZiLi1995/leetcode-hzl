### 解题思路
递归、回溯
最大路径和为一下三者中最大者：
1.左子树中最大者
2.右子树中最大者
3.左子树从底到根的最大者+右子树从底到根的最大者+根节点

全局变量res记录最大值，即可实现1，2
halfPathSum 返回 从底到根的最大者 进行递归
若<0，则返回0

时间复杂度O(n)
空间复杂度O(log(n))

### 代码

```python3
class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
        self.res = root.val

        def halfPathSum(root):
            if not root: return 0
            left = halfPathSum(root.left)
            right = halfPathSum(root.right)
            self.res = max(self.res, root.val+left+right)
            return max(0, root.val+max(left, right))
        
        halfPathSum(root)
        return self.res
```
