### 解题思路
层次遍历
据观察可知，每一层的第一个和最后一个为1
每一层的第i个为前一层的第i-1个与i个之和

时间复杂度O(N**2)
空间复杂度O(N**2)

### 代码
```python3
class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        if numRows == 0: return []
        if numRows == 1: return [[1]]
        if numRows == 2: return [[1], [1,1]]
        res = [[1], [1,1]]
        for i in range(2,numRows):
            r = [1]
            for j in range(1,i):
                r.append(res[-1][j-1]+res[-1][j])
            r.append(1)
            res.append(r)
        return res
```
