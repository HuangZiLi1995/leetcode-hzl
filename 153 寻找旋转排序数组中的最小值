### 解题思路
双指针，二分法
旋转之后，左半分支的数一定大于右半分支的数
当mid指针大于nums[0],即在左分支，更新左指针
否则更新右指针

时间复杂度O(log(n))
空间复杂度O(1)

### 代码

```python3
class Solution:
    def findMin(self, nums: List[int]) -> int:
        if not nums: return None
        if nums[0]<=nums[-1]: return nums[0]
        l, r = 0, len(nums)-1
        while l < r:
            m = (l+r)//2
            if nums[m] >= nums[0]:
                l = m+1
            else:
                r = m
        return nums[l]
```
