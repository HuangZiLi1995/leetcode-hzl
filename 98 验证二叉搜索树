# 二叉搜索树的左子树小于根节点，右子树大于根节点
# 则左子树的上界被根节点限制，右子树的下界被根节点限制
# 所以记录子树的上下界，不越界即为有效的二叉搜索树
# 递归
class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        # 递归函数，root为根节点，low，up为上下界
        def helper(root, low=float('-inf'), up=float('inf')):
            # 已经遍历完子树且都在上下界之内，则True
            if not root:
                return True
            # 越过边界，则False
            if (root.val <= low) or (root.val >= up):
                return False
            # 遍历子树，设定新的子树边界
            return helper(root.left, low, root.val) and helper(root.right, root.val, up)
        return helper(root)
# 时间复杂度O(n)
# 空间复杂度O(n)
