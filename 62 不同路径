# 动态规划
# 第一行和第一列初始化为1
# 之后每个位置都存在下和右两条路径到达
# 即其等于到达上一格的路径+到左一格的路径
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        record = [[1 for i in range(m)] for j in range(n)]
        for i in range(1,n):
            for j in range(1,m):
                record[i][j] = record[i-1][j] + record[i][j-1]
        return record[-1][-1]
# 时间复杂度O(m*n)
# 空间复杂度O(m*n)
